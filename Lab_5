using System;
using System.Text;
using System.Text.RegularExpressions;
using static System.Runtime.InteropServices.JavaScript.JSType;

namespace Obema_Lab_1_T2
{
    class Program_2
    {
        static int CheckInt(string message, int min, int max)
        {
            int number;
            bool IsNumber;
            do
            {
                Console.Write(message);
                IsNumber = int.TryParse(Console.ReadLine(), out number);
                if (!IsNumber || number > max || number < min)
                {
                    IsNumber = false;
                    Console.WriteLine($"Некорректный ввод целого числа. Число должно быть от {min} до {max}");
                }
            } while (!IsNumber);

            return number;
        }

        static double CheckDouble(string message)
        {
            double number;
            bool IsNumber;
            do
            {
                Console.Write(message);
                IsNumber = double.TryParse(Console.ReadLine(), out number);
                if (!IsNumber || Math.Abs(number) > 10000)
                {
                    IsNumber = false;
                    Console.WriteLine($"Некорректный ввод числа. Число должно быть от -10000 до 10000");
                }
            } while (!IsNumber);

            return number;
        }

        static double[,] CreateMatrix(int lines, int columns)
        {
            double[,] doubleMatrix = new double[lines, columns];
            for (int i = 0; i < lines; i++)
            {
                for (int j = 0; j < columns; j++)
                    doubleMatrix[i, j] = CheckDouble($"Строка {i + 1}, столбец {j + 1}: ");
            }

            return doubleMatrix;
        }

        static double[,] RandomMatrix(int lines, int columns, int q)
        {
            double[,] doubleMatrix = new double[lines, columns];
            for (int i = 0; i < lines; i++)
            {
                for (int j = 0; j < columns; j++)
                {
                    Random random = new Random();
                    doubleMatrix[i, j] = Math.Round(-10000 + random.NextDouble() * 20000, q);
                    if (doubleMatrix[i, j] == -0)
                        doubleMatrix[i, j] = 0;
                }
            }

            return doubleMatrix;
        }

        static void PrintMatrix(double[,] matrix, int lines, int columns)
        {
            Console.WriteLine("\nМатрица: ");
            for (int i = 0; i < lines; i++)
            {
                Console.WriteLine();
                for (int j = 0; j < columns; j++)
                    Console.Write(matrix[i, j] + "     ");
                Console.WriteLine();
            }
        }

        static double[,] AddColumns(double[,] BuildMatrix, int lines, int columns, int extraColumns)
        {
            double[,] newMatrix = new double[lines, columns + extraColumns];

            Console.WriteLine("\nВыберите метод заполнения матрицы:");
            Console.WriteLine("1. Случайные числа");
            Console.WriteLine("2. Ввод с клавиатуры");

            int choice = CheckInt("Ваш выбор (от 1 до 2): ", 1, 2);
            switch (choice)
            {

                case 1:
                    {
                        Console.WriteLine("\nВыберите до какого числа после запятой округлять числа: ");
                        int q = CheckInt("Выберите число от 0 до 8: ", 0, 8);

                        for (int i = 0; i < lines; i++)
                            Array.Copy(BuildMatrix, i * columns, newMatrix, i * (columns + extraColumns), columns);

                        for (int i = 0; i < lines; i++)
                        {
                            for (int j = columns; j < columns + extraColumns; j++)
                            {
                                Random random = new Random();
                                newMatrix[i, j] = Math.Round(-10000 + random.NextDouble() * 20000, q);
                                if (newMatrix[i, j] == -0)
                                    newMatrix[i, j] = 0;
                            }
                        }
                    }
                    break;
                case 2:
                    {
                        for (int i = 0; i < lines; i++)
                            Array.Copy(BuildMatrix, i * columns, newMatrix, i * (columns + extraColumns), columns);

                        for (int i = 0; i < lines; i++)
                        {
                            for (int j = columns; j < columns + extraColumns; j++)
                                newMatrix[i, j] = CheckDouble($"Строка {i + 1}, столбец {j + 1}: ");
                        }
                    }
                    break;
            }

            return newMatrix;
        }

        static double[][] CreateArray(int lines)
        {
            double[][] doubleArray = new double[lines][];
            for (int i = 0; i < lines; i++)
            {
                int columns = CheckInt($"Введите количество элементов в строке No{i + 1}: ", 1, 10);
                doubleArray[i] = new double[columns];
                for (int j = 0; j < columns; j++)
                    doubleArray[i][j] = CheckDouble($"Строка {i + 1}, элемент {j + 1}: ");
            }

            return doubleArray;
        }

        static double[][] RandomArray(int lines, int q)
        {
            double[][] doubleArray = new double[lines][];
            for (int i = 0; i < lines; i++)
            {
                int columns = CheckInt($"Введите количество элементов в строке No{i + 1}: ", 1, 10);
                doubleArray[i] = new double[columns];
                for (int j = 0; j < columns; j++)
                {
                    Random random = new Random();
                    doubleArray[i][j] = Math.Round(-10000 + random.NextDouble() * 20000, q);
                }
            }

            return doubleArray;
        }

        static void PrintArray(double[][] array, int lines)
        {
            if (array.Length == 0)
                Console.WriteLine("\nМассив пуст");
            else
            {
                Console.WriteLine("\nРваный массив: ");
                for (int i = 0; i < lines; i++)
                {
                    Console.WriteLine();
                    for (int j = 0; j < array[i].Length; j++)
                        Console.Write(array[i][j] + "     ");
                    Console.WriteLine();
                }
            }
        }

        static double[][] RemoveFirstLine(double[][] array, double K)
        {
            int lineToRemove = -1;
            for (int i = 0; i < array.Length; i++)
            {
                bool foundK = false;
                foreach (double num in array[i])
                {
                    if (num == K)
                    {
                        foundK = true;
                        break;
                    }
                }
                if (foundK)
                {
                    lineToRemove = i;
                    break;
                }
            }

            if (lineToRemove == -1)
            {
                Console.WriteLine($"\nЭлемент {K} не найден, массив не изменен");
                return array;
            }
            else
            {
                Console.WriteLine("\nМассив изменен");
                double[][] newArray = new double[array.Length - 1][];
                int newArrayIndex = 0;
                for (int i = 0; i < array.Length; i++)
                {
                    if (i != lineToRemove)
                    {
                        newArray[newArrayIndex] = new double[array[i].Length];
                        Array.Copy(array[i], newArray[newArrayIndex], array[i].Length);

                        newArrayIndex++;
                    }
                }

                return newArray;
            }
        }

        static string ProcessedString(string input)
        {
            input = Regex.Replace(input, @"\s+([?!.,;:])", "$1");
            input = Regex.Replace(input, @"([.?!,;:\s])\1+", "$1");
            input = Regex.Replace(input, @"([?!.,;:])(?!\s)", "$1 ");
            string[] sentenceArray = Regex.Split(input, @"(?<=[.!?])\s*");
            string processedText = "";

            foreach (string sentence in sentenceArray)
            {
                if (sentence.Length > 0)
                {
                    string firstLetter = sentence.Substring(0, 1).ToUpper();
                    string restOfSentence = sentence.Substring(1).ToLower();
                    processedText += firstLetter + restOfSentence + " ";
                }
            }

            return processedText.Trim();
        }
        static bool CheckInput(string input)
        {
            return Regex.IsMatch(input, @"^[а-яА-Я0-9,;:\!?.\s]+$") && "?!.".Contains(input[input.Length - 1]);
        }

        static bool CheckDuplicate(string input)
        {
            if (Regex.IsMatch(input, @"\?+[.,!;:]") || Regex.IsMatch(input, @"\!+[.,?;:]") || Regex.IsMatch(input, @"\.+[,?!;:]") || Regex.IsMatch(input, @"\;+[.,?!:]") || Regex.IsMatch(input, @"\:+[.,?!;:]") || Regex.IsMatch(input, @"\,+[.,?!;:]"))
                return false;
            else
                return true;
        }

        static string ReverseString(string processedString)
        {
            string[] sentences = Regex.Split(processedString, @"(?<=[.!?])\s*");
            string[] endWords = null;
            string result = null;

            for (int i = 0; i < sentences.Length; i++)
            {
                string partOfResult = " ";
                string sentence = sentences[i];

                if (sentence.EndsWith('!'))
                {
                    string[] words = sentence.Substring(0, sentence.Length - 1).Split(' ');
                    string[] punctuations = new string[words.Length + 1];
                    string[] newWords = new string[words.Length];
                    endWords = new string[words.Length];

                    punctuations[0] = " ";

                    for (int j = 0; j < words.Length; j++)
                    {
                        if (words[j].EndsWith(",") || words[j].EndsWith(";") || words[j].EndsWith(":"))
                        {
                            punctuations[j + 1] = words[j][words[j].Length - 1].ToString() + " ";
                            newWords[j] = words[j].Substring(0, words[j].Length - 1);
                        }
                        else
                        {
                            punctuations[j + 1] = " ";
                            newWords[j] = words[j];
                        }
                    }

                    newWords = newWords.Reverse().ToArray();
                    punctuations = punctuations.Reverse().ToArray();

                    for (int p = 0; p < words.Length; p++)
                    {
                        endWords[p] = newWords[p] + punctuations[p + 1];
                        if (p == words.Length - 1)
                            endWords[p] = endWords[p].Substring(0, 1).ToLower() + endWords[p].Substring(1);
                        if (p == 0)
                            endWords[p] = endWords[p].Substring(0, 1).ToUpper() + endWords[p].Substring(1);
                    }

                    partOfResult = string.Join("", endWords);
                    partOfResult = partOfResult.Substring(0, partOfResult.Length - 1);
                    partOfResult = partOfResult + "! ";
                }
                else
                    partOfResult = sentences[i] + ' ';

                result = result + partOfResult;
                result.Trim();
            }

            result = result.Trim();

            Console.WriteLine("\nСтрока изменена:");
            return result;
        }

        static void Main(string[] args)
        {
            int choice;
            do
            {
                Console.WriteLine("Выберите действие:");
                Console.WriteLine("1. Создать матрицу");
                Console.WriteLine("2. Создать рваный массив");
                Console.WriteLine("3. Ввести строку символов");
                Console.WriteLine("4. Выйти из программы");

                choice = CheckInt("Ваш выбор (от 1 до 4): ", 1, 4);
                switch (choice)
                {
                    case 1:
                        int q = 0;
                        int lines = CheckInt("\nЗадайте количество строк у матрицы: ", 1, 10);
                        int columns = CheckInt("Задайте количество столбцов у матрицы: ", 1, 10);

                        Console.WriteLine("\nВыберите метод заполнения матрицы:");
                        Console.WriteLine("1. Случайные числа");
                        Console.WriteLine("2. Ввод с клавиатуры");

                        double[,] BuildMatrix = null;
                        choice = CheckInt("Ваш выбор (от 1 до 2): ", 1, 2);
                        switch (choice)
                        {

                            case 1:
                                {
                                    Console.WriteLine("\nВыберите до какого числа после запятой округлять числа: ");
                                    q = CheckInt("Выберите число от 0 до 8: ", 0, 8);
                                    BuildMatrix = RandomMatrix(lines, columns, q);
                                    Console.WriteLine("\nМатрица создана");
                                }
                                break;
                            case 2:
                                {
                                    Console.WriteLine("\nВведите элементы для заполнения матрицы: ");
                                    BuildMatrix = CreateMatrix(lines, columns);
                                    Console.WriteLine("\nМатрица создана");
                                }
                                break;
                        }

                        do
                        {
                            if (BuildMatrix == null)
                                Console.WriteLine("\nМатрица пуста");
                            else
                            {
                                Console.WriteLine("\nВыберите действие: ");
                                Console.WriteLine("1. Напечатать текущую матрицу");
                                Console.WriteLine("2. Добавить столбцы");
                                Console.WriteLine("3. Назад");
                                Console.WriteLine("4. Выйти из программы");

                                choice = CheckInt("Ваш выбор (от 1 до 4): ", 1, 4);
                                switch (choice)
                                {
                                    case 1:
                                        PrintMatrix(BuildMatrix, lines, columns);
                                        break;
                                    case 2:
                                        if (columns == 10)
                                            Console.WriteLine("\nПревышено максимально допустимое количество столбцов (10)");
                                        else
                                        {
                                            int extraColumns = CheckInt("\nЗадайте количество столбцов, которые вы хотите добавить к матрице: ", 1, 10 - columns);
                                            int oldColumns = columns;
                                            columns = extraColumns + columns;
                                            BuildMatrix = AddColumns(BuildMatrix, lines, oldColumns, extraColumns);
                                            Console.WriteLine("\nМатрица изменена");
                                        }
                                        break;
                                    case 3:
                                        Console.WriteLine();
                                        break;
                                    case 4:
                                        Console.WriteLine("\nВыход из программы...");
                                        break;
                                }
                            }
                        } while (choice != 3 && choice != 4);
                        break;
                    case 2:
                        q = 0;
                        Console.WriteLine("\nВыберите метод заполнения массива: ");
                        Console.WriteLine("1. Случайные числа");
                        Console.WriteLine("2. Ввод с клавиатуры");

                        double[][] BuildArray = null;
                        choice = CheckInt("Ваш выбор (от 1 до 2): ", 1, 2);
                        lines = CheckInt("\nВыберите количество строк у массива: ", 1, 10);
                        switch (choice)
                        {
                            case 1:
                                Console.WriteLine("\nВыберите до какого числа после запятой округлять числа: ");
                                q = CheckInt("\nВыберите число от 0 до 8: ", 0, 8);
                                BuildArray = RandomArray(lines, q);
                                break;
                            case 2:
                                BuildArray = CreateArray(lines);
                                break;
                        }

                        do
                        {
                            if (BuildArray == null)
                                Console.WriteLine("\nМассив пуст");
                            else
                            {
                                Console.WriteLine("\nВыберите действие: ");
                                Console.WriteLine("1. Напечатать текущий массив");
                                Console.WriteLine("2. Удалить первую строку, в которой встречается заданное число K");
                                Console.WriteLine("3. Назад");
                                Console.WriteLine("4. Выйти из программы");

                                choice = CheckInt("Ваш выбор (от 1 до 4): ", 1, 4);
                                switch (choice)
                                {
                                    case 1:
                                        PrintArray(BuildArray, lines);
                                        break;
                                    case 2:
                                        if (BuildArray.Length == 0)
                                            Console.WriteLine("\nМассив пуст");
                                        else
                                        {
                                            double kforround = CheckDouble($"\nВведите число для поиска в массиве. Оно будет округлено до {q} знаков после запятой: ");
                                            double K = Math.Round(kforround, q);
                                            BuildArray = RemoveFirstLine(BuildArray, K);
                                            lines = BuildArray.Length;
                                        }
                                        break;
                                    case 3:
                                        Console.WriteLine();
                                        break;
                                    case 4:
                                        Console.WriteLine("\nВыход из программы...");
                                        break;
                                }
                            }
                        } while (choice != 3 && choice != 4);
                        break;
                    case 3:
                        {
                            Console.WriteLine("\nВыберите метод заполнения строки: ");
                            Console.WriteLine("1. Тестовый вариант");
                            Console.WriteLine("2. Ввод с клавиатуры");

                            choice = CheckInt("Ваш выбор (от 1 до 2): ", 1, 2);
                            string input = " ";
                            switch (choice)
                            {

                                case 1:
                                    input = "В лесу родилась елочка! В лесу она росла. Зимой и летом стройная, зеленая была! ";
                                    break;
                                case 2:
                                    {
                                        bool stringCheck = false;
                                        do
                                        {
                                            Console.WriteLine("\nВведите текст: ");
                                            input = Console.ReadLine();
                                            input = input.Trim();

                                            if (string.IsNullOrWhiteSpace(input))
                                            {
                                                Console.WriteLine("Строка не должна быть пустой или состоять только из пробелов. Попробуйте снова");
                                                stringCheck = false;
                                            }
                                            else if (CheckInput(input) == false || "?!.;:,".Contains(input[0]) || input.Length > 10000 || CheckDuplicate(input)==false)
                                            {
                                                Console.WriteLine("Некорректный ввод строки. Строка должна состоять только из русских букв, символов {: ; , . ! ?}, пробела и цифр. В конце ввода обязательно должен стоять один из трех знаков - {! ? .} Максимальная длина строки - 10000 символов");
                                                stringCheck = false;
                                            }
                                            else
                                                stringCheck = true;
                                        } while (!stringCheck);
                                    }
                                    break;
                            }

                            string processedString = ProcessedString(input);

                            Console.WriteLine("\nТекущая строка создана");
                            do
                            {
                                Console.WriteLine("\nВыберите действие: ");
                                Console.WriteLine("1. Вывести текущую строку");
                                Console.WriteLine("2. Перевернуть предложения с !");
                                Console.WriteLine("3. Выйти в основное меню");

                                choice = CheckInt("Ваш выбор (от 1 до 3): ", 1, 3);
                                switch (choice)
                                {

                                    case 1:
                                        {
                                            Console.WriteLine("\nТекущая строка:");
                                            Console.WriteLine(processedString);
                                        }
                                        break;
                                    case 2:
                                            Console.WriteLine(ReverseString(processedString));
                                        break;
                                    case 3:
                                        Console.WriteLine();
                                        break;
                                }
                            } while (choice != 3);
                        }
                        break;
                    case 4:
                        Console.WriteLine("\nВыход из программы...");
                        break;
                }
            } while (choice != 4);
        }
    }
}
